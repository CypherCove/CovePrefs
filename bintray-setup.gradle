apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'coveprefs'

    groupId = 'com.cyphercove.coveprefs'
    libraryName = 'CovePrefs'

    siteUrl = 'https://github.com/cyphercove/coveprefs'
    gitUrl = 'https://github.com/cyphercove/coveprefs.git'

    libraryVersion = '1.0.0-SNAPSHOT'

    developerId = 'cypherdare'
    developerName = 'Darren'
    developerEmail = 'contact@cyphercove.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = groupId
version = libraryVersion
project.archivesBaseName = artifactId

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                groupId groupId
                artifactId artifactId
                name libraryName
                description artifactDesc
                url siteUrl

                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

if (project.hasProperty("android")) {
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        destinationDir = file("../javadoc/")
        failOnError false
    }
} else {
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = bintrayUser
    key = bintrayApiKey

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = artifactDesc
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = artifactDesc
            gpg {
                sign = true
                passphrase = bintraySigningPassword
            }
        }
    }
}